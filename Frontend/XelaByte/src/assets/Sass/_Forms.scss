@import "Colors";

.input-c
{
    $input-c: &;
    background-color: $FormGray;
    border-style: solid;
    border-radius: 0.75rem;
    border-color: $FormBorder;
    border-width: 2px;
    padding: 0.625rem 1rem;
    flex-direction: column-reverse !important;
    transition: all ease-in-out 150ms;
    small
    {
        //color: blue;
        transition: color 200ms ease-in-out;
        margin: 1rem 1rem 0rem 1rem;
        i { margin-right: 0.75rem; }
    }
}

input, select, textarea
{
    color: $LightBlack;
    font-size: 1.125rem;
    padding: 0.625rem 1rem;
    outline: none;
    border-width: 0;
    border-radius: 0.75rem;
    background-color: transparent;
    margin: 0.625rem 0rem;
    /*border-width: 3px;
    border-radius: 0.75rem;
    box-shadow: $InputsShadow;*/
    transition: all ease 100ms;
    &:focus-visible 
    { 
        transition: all ease 100ms; outline: none;
    }
    //&:focus-visible { transition: all ease 100ms; box-shadow: 0px 0px 0px 1px #000000cc, $InputsShadow; outline: none !important;  }
    &.ng-dirty.ng-invalid
    {
        &~small
        {
            transition: color 100ms ease-in-out;
            color: $ErrorColor;
            animation: shakeError ease-in-out 300ms 1;
        }
    }
}

textarea
{
    width: 100%;
    height: 18.75rem;
    resize: none;
    overflow-y: auto;
}

.FileInputContainer 
{ 
    margin-top: 1.5rem;
    padding: 5rem 0;
    border: 5px dashed $DarkGray;
    border-radius: 15px;
    width: 100%;
    resize: none;
    overflow-y: hidden;

    grid-template-columns: 1fr; 
    label, .FileInput, .fileUploadLabelContainer
    { 
        grid-row-start: 1; grid-column-start: 1;
    }

    label 
    { 
        pointer-events: none;
        transition: all ease 100ms;
        justify-self: center;
        width: max-content;
        &:hover { transition: all ease 80ms; transform: scale(1.1); }
        p 
        { 
            font-size: 1rem;
            @media only screen and (max-width: 450px) { width: min-content; }
            width: max-content;
            pointer-events: auto;
        } 
    }
}

.fileOver { label { transition: all ease 80ms; transform: scale(1.1); } }

.FileInput
{
    width: 100%;
    pointer-events: none;
    margin: 0;
    padding: 0;
    outline: none;
    opacity: 0;
    resize: none;
    overflow-y: auto;
}

//ANIMACIONES
.shakeError { animation: shakeError ease-in-out 300ms 1 !important; }
@keyframes shakeError
{
    0% { transform: translateX(0px) translateY(0px); }
    10% { transform: translateX(3px) translateY(3px); }
    20% { transform: translateX(-3px) translateY(-3px); }
    35% { transform: translateX(2px) translateY(2px); }
    45% { transform: translateX(-2px) translateY(-2px); }
    60% { transform: translateX(1px) translateY(1px); }
    70% { transform: translateX(-1px) translateY(-1px); }
    80% { transform: translateX(1px) translateY(1px); }
    90% { transform: translateX(-1px) translateY(-1px); }
    100% { transform: translateX(0px) translateY(0px); }
}